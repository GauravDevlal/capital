{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/excel/excel.component.ts","webpack:///src/app/excel/excel.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ErrorComponent","erromessage","EXCEL_TYPE","EXCEL_EXTENSION","ExcelComponent","router","myExcelData","accounts","securitydataExcel","transactionType","DefaultOrder","form1","form2","form3","security","CommonStockCheckbox","ConvertibleCheckbox","LongBondCheckbox","CurrencyForwardCheckbox","equityData","equityFilteredData","fixedIncomeData","derivativeData","newArr","tempArr","finalArr","securityDropdownList","securitySelectedItems","accountDropdownList","accountSelectedItems","accountPortfolio","accountPortfolioDropdownList","alternateAccountPortfolioDropdownList","accountPortfolioSelectedItems","securityDropdownSettings","accountPortfolioDropdownSettings","dropdownSettings","console","log","readfile","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","localArr","index","length","i","concat","alternateLocalArr","portfolios","split","localJson1","element","localJson2","Account","Portfolio_ID","item","loadPortfolios","items","url","oReq","XMLHttpRequest","open","responseType","onload","arraybuffer","response","data","Uint8Array","arr","Array","String","fromCharCode","bstr","join","workbook","type","first_sheet_name","SheetNames","second_sheet_name","worksheet1","Sheets","sheet_to_json","raw","worksheet2","bind","send","Object","securityJson","value","loadAccounts","quantityOrder","j","finalAccountsList","tempJson","equityFormData","EquityFormData","json1","window","location","reload","json2","json3","workBook","book_new","workSheet","json_to_sheet","book_append_sheet","getDetails","assetName","securityLookUp","securityLookUpType","accountCode","portfolioId","targetQuantity","cusip","tradeProgram","trader","orderInstructions","LoginComponent","username","password","errormessage","invalidLogin","navigate","handleLogin","WelcomeComponent","route","name","commonstock","convertible","longBond","currencyForward","jsonArr","accountHolder","derivative","Derivative","Date","fixedIncome","FixedIncome","setting","dynamicDownload","snapshot","params","price","userData2","account","securities","assetId","openDate","settleDate","portfolioOrder","portfolioManager","counterParty","confirmedWith","fakeValidateUserData","subscribe","res","dyanmicDownloadByHtmlTag","fileName","text","JSON","stringify","alert","currencyPair","confirmedBy","arg","document","createElement","fileType","indexOf","setAttribute","encodeURIComponent","event","MouseEvent","dispatchEvent","includes","status","target","checked","onSubmit","checkTransactionType","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent } from './login/login.component'\nimport {WelcomeComponent } from './welcome/welcome.component'\nimport {ErrorComponent } from './error/error.component'\nimport {ExcelComponent} from './excel/excel.component'\n\n//welcome\nconst routes: Routes = [\n\n  {path : '', component: LoginComponent},\n  {path : 'index', component: LoginComponent},\n  {path : 'login', component: LoginComponent},\n  {path : 'excel', component: ExcelComponent},\n  {path : '**', component: ErrorComponent}\n];\n\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Bulk Order Tool';\n}\n","\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- <div>\n     <h1>\n        welcome to Infosys {{title}}\n\n     </h1>\n     \n\n</div> -->\n\n<!-- \n<app-welcome></app-welcome> -->\n<!-- <app-login> </app-login> -->\n\n<!-- <div>component content</div> -->\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { LoginComponent } from './login/login.component';\nimport { ErrorComponent } from './error/error.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ExcelComponent } from './excel/excel.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    LoginComponent,\n    ErrorComponent,\n    ExcelComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    NgMultiSelectDropDownModule.forRoot()\n  \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  erromessage = \"Some Error Occured!! Contact support \"\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>{{erromessage}}</h1>\n","import { Component, OnInit } from '@angular/core';\nimport * as XLSX from 'xlsx';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport {Router} from '@angular/router';\n\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n\n\n@Component({\n  selector: 'app-excel',\n  templateUrl: './excel.component.html',\n  styleUrls: ['./excel.component.css']\n})\nexport class ExcelComponent implements OnInit {\n\n//excel data identifiers\nmyExcelData = []\naccounts = [];\nsecuritydataExcel = [];\n\ntransactionType = ''\n\n//DefaultOrder identifiers\nDefaultOrder = false\nquantityOrder \n\n//form identifiers\nform1 = false\nform2 = false\nform3 = false\n\n\nsecurity  = 'equity' \n\n\n//identifiers for checkboxes\nCommonStockCheckbox = false\nConvertibleCheckbox = false\nLongBondCheckbox = false\nCurrencyForwardCheckbox = false\n\n//securities data identifiers\nequityData = []\nequityFilteredData = []\nfixedIncomeData = []\nderivativeData = []\n\n\n//arrays used\nnewArr = []\ntempArr = []\nfinalArr = []\n\n//json data variables  \njson1\njson2 \njson3\n\n  constructor(private router: Router) { \n\n  }\n\n  //Identifiers for list\n  securityDropdownList = []\n  securitySelectedItems = []\n  accountDropdownList = [];\n  accountSelectedItems = [];\n\n  //varibles for portfolio\n  accountPortfolio = [];\n  accountPortfolioDropdownList = [];\n  alternateAccountPortfolioDropdownList = [];\n  accountPortfolioSelectedItems = []\n\n  securityDropdownSettings :IDropdownSettings = {};\n\n  accountPortfolioDropdownSettings : IDropdownSettings = {};\n  \n\n  dropdownSettings:IDropdownSettings = {};\n\n  ngOnInit(): void {\n\n    console.log('ngoninit');\n\n    this.readfile()\n    \n    this.accountSelectedItems = [\n      \n    ];\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'Account',\n      textField: 'Account',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 5,\n      allowSearchFilter: true,\n\n    };\n\n  } \n\n  //Loading account portfolios\n  loadPortfolios(){\n\n    var localArr= []\n        this.accountPortfolio = []\n\n        console.log('localArr--->',localArr);\n        console.log('this.accountSelectedItems--->',this.accountSelectedItems);\n        \n        //get complete data by selected accounts \n        for (let index = 0; index < this.accountSelectedItems.length; index++) {\n          \n\n          for (let i = 0; i < this.accounts.length; i++) {\n            if(this.accounts[i]['Account']==this.accountSelectedItems[index]['Account']){\n              console.log('true')\n\n            localArr = localArr.concat(this.accounts[i])\n            break\n\n          } \n          }\n          }\n        console.log('localArr-->',localArr);\n\n        this.accountPortfolio = this.accountPortfolio.concat(localArr)\n\n        console.log('this.accountPortfolio onItemSelect---->',this.accountPortfolio);\n\n        var alternateLocalArr = []\n        localArr = []\n\n        for (let index = 0; index < this.accountPortfolio.length; index++) {\n          \n          console.log(this.accountPortfolio[index]['Portfolio_ID']);\n          var portfolios = this.accountPortfolio[index]['Portfolio_ID'].split(',')\n          console.log('portfolios---->',portfolios.length);\n\n          localArr = localArr.concat(portfolios)\n\n\n          var localJson1  =[]\n\n          for (let i = 0; i < portfolios.length; i++) {\n            const element = portfolios[i];\n\n            console.log('element--->',element);\n\n            var localJson2={\n              Account :  this.accountPortfolio[index]['Account'],\n              Portfolio_ID : element\n\n            }\n\n          localJson1 = localJson1.concat(localJson2)  \n            \n          }\n\n          alternateLocalArr = alternateLocalArr.concat(localJson1)\n          \n          \n          \n        }\n\n        \n      this.accountPortfolioDropdownList = localArr\n\n      this.alternateAccountPortfolioDropdownList = alternateLocalArr\n\n      console.log('this.accountPortfolioDropdownList---->',this.accountPortfolioDropdownList);\n      console.log('this.alternateAccountPortfolioDropdownList---->',this.alternateAccountPortfolioDropdownList);\n    \n\n      console.log(\"load portfolios end\");\n      \n\n  }\n\n  //Accounts Dropdown functions \n\n  onItemSelect(item:any){\n \n\n   \n        console.log('onItemSelect-->',item);\n        console.log('-------->',this.accountSelectedItems);\n        this.loadPortfolios();\n\n        \n    }\n    OnItemDeSelect(item:any){\n        console.log(\"OnItemDeSelect------->\",item);\n        this.accountPortfolioSelectedItems = []\n        console.log('--->this.accountSelectedItems',this.accountSelectedItems);\n        this.loadPortfolios();\n\n       \n    }\n    onSelectAll(items: any){\n        console.log(\"onSelectAll items\", items);\n\n        this.accountSelectedItems = items\n        console.log('--->this.accountSelectedItems',this.accountSelectedItems);\n        this.loadPortfolios();\n    }\n    onDeSelectAll(items: any){\n        console.log('ondeSelectAll', items);\n        this.accountSelectedItems = items\n        console.log('--->this.accountSelectedItems',this.accountSelectedItems);\n        this.loadPortfolios();\n    }\n\n    //portfolio accounts dropdown functions\n    onAccountPortfolioItemSelect(item:any){\n        console.log('onAccountPortfolioItemSelect-->',item);\n        console.log('-------->',this.accountPortfolioSelectedItems);\n    }\n    OnAccountPortfolioDeSelect(item:any){\n        console.log(\"OnAccountPortfolioDeSelect\");\n        console.log(this.accountPortfolioSelectedItems);\n    }\n    onAccountPortfolioSelectAll(items: any){\n        console.log('onAccountPortfolioSelectAll-->',items);\n    }\n    onAccountPortfolioDeSelectAll(items: any){\n        console.log('onAccountPortfoliodeSelectAll-->',items);\n    }\n\n\n  //Securities dropdown\n    \n  onSecuritySelect(item:any){\n        console.log('onSecuritySelect-->',item);\n        console.log('-------->',this.securitySelectedItems);\n    }\n    OnSecurityDeSelect(item:any){\n        console.log(\"OnSecurityDeSelect\");\n        console.log(this.securitySelectedItems);\n    }\n    onSecuritySelectAll(items: any){\n        console.log('onSecuritySelectAll-->',items);\n    }\n    onSecurityDeSelectAll(items: any){\n        console.log(items);\n    }\n\n\n  //function to read file\n   readfile() {\n    // You can change the url of file path here\n    var url = \"/assets/SINGLE.xlsx\";\n    var oReq = new XMLHttpRequest();\n    oReq.open(\"GET\", url, true);\n    oReq.responseType = \"arraybuffer\";\n\n\noReq.onload = function(e) {\n  \n  var arraybuffer = oReq.response;\n\n  /* convert data to binary string */\n  var data = new Uint8Array(arraybuffer);\n \n  var arr = new Array();\n\n  for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);\n  var bstr = arr.join(\"\");\n\n  /* Call XLSX */\n  var workbook = XLSX.read(bstr, {type:\"binary\"});\n\n  /* DO SOMETHING WITH workbook HERE */\n  var first_sheet_name = workbook.SheetNames[0];\n\n  var second_sheet_name = workbook.SheetNames[1];\n\n  /* Get worksheet */\n  var worksheet1 = workbook.Sheets[first_sheet_name];\n  console.log(XLSX.utils.sheet_to_json(worksheet1,{raw:true}));\n  \n  \n  this.myExcelData = XLSX.utils.sheet_to_json(worksheet1,{raw:true})\n\n   var worksheet2 = workbook.Sheets[second_sheet_name];\n  \n  console.log(XLSX.utils.sheet_to_json(worksheet2,{raw:true}));\n  \n  \n  this.securitydataExcel = XLSX.utils.sheet_to_json(worksheet2,{raw:true})\n\n}.bind(this.myExcelData)\nconsole.log('send')\noReq.send();\n\n}\n\n\n//function to load accounts and creating a dropdown\n\nloadAccounts(){\n\n  this.fixedIncomeData = []\n  this.equityData = []\n  this.derivativeData = []\n\n  console.log('I am in loadAccounts')\n\n  this.accounts = this.myExcelData[Object.keys(this.myExcelData)[0]]\n\n  this.accountDropdownList = this.accounts\n\n  console.log('account dropdown list created',this.accountDropdownList)\n\n  this.securitydataExcel = this.myExcelData[Object.keys(this.myExcelData)[1]]\n  \n\n// filtering and creating data for different securities based on primary code\n  for (let index = 0; index < this.securitydataExcel.length; index++) {\n    const element = this.securitydataExcel[index];\n\n    console.log('in loop element',element[\"Primary Code\"])\n\n    var securityJson \n\n    if(element[\"Primary Code\"] == 'E'){\n\n      this.equityData = this.equityData.concat(element)\n\n    }\n    else if(element[\"Primary Code\"] == 'F'){\n\n\n      this.fixedIncomeData = this.fixedIncomeData.concat(element)\n\n    }\n\n    else{\n\n\n      this.derivativeData = this.derivativeData.concat(element)\n    }\n\n  }\n\n\n  //final data from excel\n  console.log('this.equityData-------->',this.equityData)\n  console.log('this.fixedIncomeData-------->',this.fixedIncomeData)\n  console.log('this.derivativeData-------->',this.derivativeData)\n  \n\n}\n\n//to set values for forms\nselectForm(value){\n\n  this.form1 = false\n  this.form2 = false\n  this.form3 = false\n\n  this.CommonStockCheckbox = false\n  this.ConvertibleCheckbox = false\n  this.LongBondCheckbox = false\n  this.CurrencyForwardCheckbox = false\n\n\n}\n\n\n//function is called when we do Equity transaction \nequityTransaction(){\n  \n  //load accounts\n  this.loadAccounts();\n\n\n\n  console.log('our equity data for equity transactions---------->', this.equityData)\n\n  console.log('checkbox value of CommonStockCheckbox--->',this.CommonStockCheckbox)\n  console.log('checkbox value of ConvertibleCheckbox---->',this.ConvertibleCheckbox)\n\n  this.equityFilteredData = []\n  this.securitySelectedItems=[]\n\nif(this.CommonStockCheckbox || this.ConvertibleCheckbox){\n\n  this.form1 = true\n  this.form2 = false\n  this.form3 = false\n  \n  for (let index = 0; index < this.equityData.length; index++) {\n\n\n    const element = this.equityData[index];\n\n    console.log(element)\n\n    if(this.CommonStockCheckbox  && !this.ConvertibleCheckbox){\n\n      if(element[\"Secondary Code\"]=='CS'){\n\n      this.equityFilteredData = this.equityFilteredData.concat(element)\n\n      }\n\n\n    }\n\n    else if(!this.CommonStockCheckbox && this.ConvertibleCheckbox){\n      \n\n      if(element[\"Secondary Code\"]=='CV'){\n\n       this.equityFilteredData = this.equityFilteredData.concat(element)\n\n      }\n\n\n    }\n    else if(this.CommonStockCheckbox && this.ConvertibleCheckbox){\n      \n\n      if(element[\"Secondary Code\"]=='CV'|| element[\"Secondary Code\"]=='CS' )\n       this.equityFilteredData = this.equityFilteredData.concat(element)\n\n\n\n    }\n    else{\n\n    console.log('else in loop')\n    this.form1 = false\n    this.form2 = false\n    this.form3 = false\n\n    }\n\n  }\n\n}\nelse{\n\n  this.form1 = false\n  this.form2 = false\n  this.form3 = false\n}\n\n\n\n  console.log('data created based on selection of common stock and convertible checkboxes------->',this.equityFilteredData)\n\n  //assigning data to securities list dropdown\n  this.securityDropdownList = this.equityFilteredData\n\n  this.securityDropdownSettings = {\n      singleSelection: false,\n      idField: 'Asset Id',\n      textField: 'Asset Name',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 5,\n      allowSearchFilter: true,\n\n    };\n\n}\n\n//function to perform fixedIncomeTransaction\nfixedIncomeTransaction(){\n\n  console.log('fixedIncomeTransaction() method')\n  console.log('fixedIncomeData data', this.fixedIncomeData);\n  \n\n\n  this.loadAccounts()\n  this.securityDropdownList = []\n  this.securitySelectedItems=[]\n  \n\n  if(this.LongBondCheckbox){\n    console.log('in true condition');\n    \n    this.form2 = true\n    this.form1 = false\n    this.form3 = false\n\n\n\n    this.securityDropdownList = this.fixedIncomeData\n\n    console.log('securityDropdownList------->',this.securityDropdownList);\n\n  //applying dropdown settings\n    this.securityDropdownSettings = {\n      singleSelection: false,\n      idField: 'Asset Id',\n      textField: 'Asset Name',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 5,\n      allowSearchFilter: true,\n\n    };\n  \n    this.accountPortfolioDropdownSettings = {\n      singleSelection: false,\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 5,\n      allowSearchFilter: true,\n\n    };\n    \n\n  }\n\n  else{\n\n    console.log('in else condition');\n    this.form1 = false\n    this.form2 = false\n    this.form3 = false\n\n  }\n\n}\n\n//function is called when we do\nderivativeTransaction(){\n\nconsole.log('derivativeTransaction() method')\n\nconsole.log('derivativeData data', this.derivativeData);\n  \n  this.loadAccounts()\n  this.securityDropdownList = []\n  this.securitySelectedItems=[]\n  \n\n  if(this.CurrencyForwardCheckbox){\n\n    this.form2 = false\n    this.form1 = false\n    this.form3 = true\n\n    \n    this.securityDropdownList = this.derivativeData\n\n    console.log('securityDropdownList------->',this.securityDropdownList);\n\n    this.securityDropdownSettings = {\n      singleSelection: false,\n      idField: 'Asset Id',\n      textField: 'Asset Name',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 5,\n      allowSearchFilter: true,\n\n    };\n\n  }\n\n  else{\n\n    console.log('in else condition');\n    this.form1 = false\n    this.form2 = false\n    this.form3 = false\n\n\n  }\n\n\n}\n\n//this function is called when we click submit\ngetDetails(){\n\n  console.log('getdetails method running');\n  \n\n  this.finalArr =[]\n\n  console.log('mysecurity type-->',this.security)\n\n  console.log('this.accountSelectedItems---->',this.accountSelectedItems)\n\n  console.log('this.quantityOrder---->',this.quantityOrder)\n\n  if(this.security == \"Equity\"){\n\n    console.log('running for equity');\n    \n\n  //fetching complete array of data based on securities selected\n  for (var i = 0; i < this.equityFilteredData.length; i++){\n\n    for (var j = 0; j < this.securitySelectedItems.length; j++)\n\n    if(this.equityFilteredData[i][\"Asset Id\"]==this.securitySelectedItems[j][\"Asset Id\"]){\n\n      console.log(\"true\",this.equityFilteredData[i])\n\n      this.newArr = this.newArr.concat(this.equityFilteredData[i])\n\n    }\n\n  }\n\n\nconsole.log('securities data created --->',this.newArr)\n\n\nvar finalAccountsList = []\n\nconsole.log('this.alternateAccountPortfolioDropdownList--->',this.alternateAccountPortfolioDropdownList);\n\nfor (let i = 0; i < this.alternateAccountPortfolioDropdownList.length; i++) {\n  \n  for (let j = 0; j < this.accountPortfolioSelectedItems.length; j++) {\n\n    if(this.alternateAccountPortfolioDropdownList[i]['Portfolio_ID']==this.accountPortfolioSelectedItems[j])\n    {\n\n      var tempJson={\n              Account :  this.alternateAccountPortfolioDropdownList[i]['Account'],\n              Portfolio_ID : this.accountPortfolioSelectedItems[j]\n\n            }\n      console.log('i got it');\n\n      finalAccountsList = finalAccountsList.concat(tempJson);\n    }\n\n  }\n  \n}\nconsole.log('i have my final list--->',finalAccountsList);\n\n\n  \n\n  //loop to generate all securities for each account--bulk order generation\n  //newArr is securities selected data\n  for (var i = 0; i < finalAccountsList.length; i++){\n\n    console.log(\"accountSelectedItems-->\",finalAccountsList[i])\n\n\n    for (var j = 0; j < this.newArr.length; j++){\n      \n       var equityFormData = new EquityFormData(this.transactionType,this.newArr[j][\"Asset Name\"], this.newArr[j][\"Asset Id\"], this.newArr[j][\"Primary Code\"],\n       finalAccountsList[i]['Account'],finalAccountsList[i]['Portfolio_ID'],this.quantityOrder,this.newArr[j][\"CUSIP\"],'Hola1Test','ETP_TRADER','MKT')\n\n      console.log('equityFormData--->',equityFormData)\n\n      this.json1 = equityFormData\n\n      this.finalArr = this.finalArr.concat(this.json1)\n\n    }\n\n\n  }\n\n  console.log('my final output to be exported--->', this.finalArr)\n\n\n  this.export()\n\n  window.location.reload();\n\n}\n\nelse if(this.security == \"Fixed Income\"){\n\n  console.log('running Fixed Income');\n\n   //fetching complete array of data based on securities selected\n  for (var i = 0; i < this.fixedIncomeData.length; i++){\n\n    for (var j = 0; j < this.securitySelectedItems.length; j++)\n\n    if(this.fixedIncomeData[i][\"Asset Id\"]==this.securitySelectedItems[j][\"Asset Id\"]){\n\n      console.log(\"true\",this.fixedIncomeData[i])\n\n      this.newArr = this.newArr.concat(this.fixedIncomeData[i])\n\n    }\n\n  }\n\nconsole.log('securities data created --->',this.newArr)\nconsole.log('this.accountSelectedItems--->',this.accountSelectedItems);\nconsole.log('this.accountPortfolioSelectedItems----->',this.accountPortfolioSelectedItems);\n\nvar finalAccountsList = []\n\nconsole.log('this.alternateAccountPortfolioDropdownList--->',this.alternateAccountPortfolioDropdownList);\n\nfor (let i = 0; i < this.alternateAccountPortfolioDropdownList.length; i++) {\n  \n  for (let j = 0; j < this.accountPortfolioSelectedItems.length; j++) {\n\n    if(this.alternateAccountPortfolioDropdownList[i]['Portfolio_ID']==this.accountPortfolioSelectedItems[j])\n    {\n\n      var tempJson={\n              Account :  this.alternateAccountPortfolioDropdownList[i]['Account'],\n              Portfolio_ID : this.accountPortfolioSelectedItems[j]\n\n            }\n      console.log('i got it');\n\n      finalAccountsList = finalAccountsList.concat(tempJson);\n    }\n\n  }\n  \n}\nconsole.log('i have my final list--->',finalAccountsList);\n\n  //loop to generate all securities for each account--bulk order generation\n\n  //newArr is securities selected data and \n  for (var i = 0; i < finalAccountsList.length; i++){\n\n    console.log(\"accountSelectedItems-->\",finalAccountsList[i])\n\n\n    for (var j = 0; j < this.newArr.length; j++){\n      \n       var equityFormData = new EquityFormData(this.transactionType,this.newArr[j][\"Asset Name\"], this.newArr[j][\"Asset Id\"], this.newArr[j][\"Primary Code\"],\n       finalAccountsList[i]['Account'],finalAccountsList[i]['Portfolio_ID'],this.quantityOrder,this.newArr[j][\"CUSIP\"],'Hola1Test','ETP_TRADER','MKT')\n\n      console.log('equityFormData--->',equityFormData)\n\n      this.json2 = equityFormData\n\n      this.finalArr = this.finalArr.concat(this.json2)\n\n    }\n\n  }\n\n  console.log('my final output to be exported--->', this.finalArr)\n\n  this.export()\n  window.location.reload();\n  //this.router.navigate(['excel']);\n  \n}\nelse if(this.security == \"Derivative\"){\n\n  console.log('running derivative');\n\n   //fetching complete array of data based on securities selected\n  for (var i = 0; i < this.derivativeData.length; i++){\n\n    for (var j = 0; j < this.securitySelectedItems.length; j++)\n\n    if(this.derivativeData[i][\"Asset Id\"]==this.securitySelectedItems[j][\"Asset Id\"]){\n\n      console.log(\"true\",this.derivativeData[i])\n\n      this.newArr = this.newArr.concat(this.derivativeData[i])\n    }\n  }\nconsole.log('securities data created --->',this.newArr)\n\n\nvar finalAccountsList = []\n\nconsole.log('this.alternateAccountPortfolioDropdownList--->',this.alternateAccountPortfolioDropdownList);\n\nfor (let i = 0; i < this.alternateAccountPortfolioDropdownList.length; i++) {\n  \n  for (let j = 0; j < this.accountPortfolioSelectedItems.length; j++) {\n\n    if(this.alternateAccountPortfolioDropdownList[i]['Portfolio_ID']==this.accountPortfolioSelectedItems[j])\n    {\n\n      var tempJson={\n              Account :  this.alternateAccountPortfolioDropdownList[i]['Account'],\n              Portfolio_ID : this.accountPortfolioSelectedItems[j]\n\n            }\n      console.log('i got it');\n\n      finalAccountsList = finalAccountsList.concat(tempJson);\n    }\n\n  }\n  \n}\nconsole.log('i have my final list--->',finalAccountsList);\n\n\n  \n\n\n\n\n  //loop to generate all securities for each account--bulk order generation\n  for (var i = 0; i < finalAccountsList.length; i++){\n\n    console.log(\"accountSelectedItems-->\",finalAccountsList[i])\n\n\n    for (var j = 0; j < this.newArr.length; j++){\n      \n       var equityFormData = new EquityFormData(this.transactionType,this.newArr[j][\"Asset Name\"], this.newArr[j][\"Asset Id\"], this.newArr[j][\"Primary Code\"],\n       finalAccountsList[i]['Account'],finalAccountsList[i]['Portfolio_ID'],this.quantityOrder,this.newArr[j][\"CUSIP\"],'Hola1Test','ETP_TRADER','MKT')\n\n      console.log('equityFormData--->',equityFormData)\n      this.json3 = equityFormData\n\n      this.finalArr = this.finalArr.concat(this.json3)\n    }\n  }\n\n  console.log('my final output to be exported--->', this.finalArr)\n  this.export()\n  window.location.reload();\n\n  \n}\n \n}\nexport() {\n    \n\n    const workBook = XLSX.utils.book_new(); // creates a new blank book\n    const workSheet = XLSX.utils.json_to_sheet(this.finalArr);\n\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'data'); // add the worksheet to the book\n    XLSX.writeFile(workBook, 'temp.xlsx'); // initiate a file download in browser\n  }\n\n  defaultOrder(){\n\n    console.log('default order executed',this.DefaultOrder);\n    \n  if(this.DefaultOrder){\n\n    this.quantityOrder=25\n\n  }else{\n\n    this.quantityOrder = ''\n    \n\n  }\n}\n \n}\nexport class EquityFormData{\n  constructor(  \n\n    public transactionType: string,\n    public assetName : string,\n    public securityLookUp : number,\n    public securityLookUpType : string,\n    public accountCode : string,\n    public portfolioId : string,\n    public targetQuantity : number,\n    public cusip : string,\n    public tradeProgram : string,\n    public trader : string,\n    public orderInstructions : string\n\n  ){}\n\n}\n","\n\n<form (ngSubmit)= \"getDetails()\" >\n<div class=\"tool\">\n<H1> Bulk Order Generation tool</H1>\n\n\nSelection type of transaction\n\n<div class=\"radio\">\n                <label><input type=\"radio\" [(ngModel)]=\"transactionType\" name=\"transactionType\" value=\"Buy\"  >Buy</label>\n            </div>\n\n\n            \n            <div class=\"radio\"> \n                <label><input type=\"radio\" [(ngModel)]=\"transactionType\" name=\"transactionType\" value=\"Sell\"  >Sell</label>\n            </div>\n\n\n<br>\n<div *ngIf=\"transactionType == 'Buy'\">\n\n<input type=\"checkbox\" id=\"Default Order\" name=\"Default Order\" value=\"Default Order\" [(ngModel)]=\"DefaultOrder\" (change)=\"defaultOrder()\" >\n<label for=\"Default Order\">Check this for default quantity order</label>\n\n\n<br>\nSelect type of security\n            <div class=\"radio\">\n                <label><input type=\"radio\" [(ngModel)]=\"security\"  name=\"security\" value=\"Equity\"    (click)=\"selectForm('Equity')\"  >Equity</label>\n            </div>\n            <div class=\"radio\">\n                <label><input type=\"radio\" [(ngModel)]=\"security\"  name=\"security\" value=\"Fixed Income\" (click)=\"selectForm('Fixed Income')\" >Fixed Income</label>\n            </div>\n            <div class=\"radio\">\n                <label><input type=\"radio\" [(ngModel)]=\"security\"  name=\"security\" value=\"Derivative\" (click)=\"selectForm('Derivative')\">Derivative</label>\n            </div>\n            \n\n\n\n<div *ngIf=\"security == 'Equity'\">\nYou have selected Equity :\n<br> \n\n<input type=\"checkbox\" id=\"Common Stock\" name=\"Common Stock\" value=\"Common Stock\" [(ngModel)]=\"CommonStockCheckbox\" (change)=\"equityTransaction()\" [ngModelOptions]=\"{standalone:\n   true}\"  >\n<label for=\"Common Stock\"> Common Stock</label>\n<input type=\"checkbox\" id=\"Convertible\" name=\"Convertible\" value=\"Convertible\" [(ngModel)]=\"ConvertibleCheckbox\" (change)= \"equityTransaction()\" [ngModelOptions]=\"{standalone:\n   true}\">\n<label for=\"Convertible\"> Convertible</label>\n\n\n\n</div>\n\n \n<div *ngIf=\"security == 'Fixed Income'\">\nYou have selected Fixed Income : \n<br>\nLong Bond :\n<input type=\"checkbox\" id=\"LongBond\" name=\"Long Bond\" value = \"Long Bond\"  [(ngModel)]=\"LongBondCheckbox\" (change)=\"fixedIncomeTransaction()\">\n\n\n\n\n</div>\n\n\n\n<div *ngIf=\"security === 'Derivative'\">\nYou have selected Derivative : \n\n<br>\n\n<input type=\"checkbox\"  name=\"Currency Forward\" value=\"Currency Forward\" [(ngModel)]=\"CurrencyForwardCheckbox\" (change)=\"derivativeTransaction()\">\n<label for=\"Currency Forward\">Currency Forward</label><br>\n\n\n\n</div> \n\n<!-- \n\n<table >\n    <thead>\n      <tr>\n        <th>#</th>\n       <th>TransactionType</th>\n        <th>TradeProgram</th>\n        \n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of products; let i = index\">\n      <td>{{i+1}}</td>\n        <td>{{product.TransactionType}}</td>\n       \n        <td>{{product.TradeProgram}}</td>\n        \n      </tr>\n    </tbody>\n  </table>  -->\n<!-- \n   <input type=\"button\" value=\"click\" (click)=\"loadAccounts()\"> -->\n\n\n   \n\n<!-- \n<input type=\"checkbox\" [(ngModel)]=\"CommonStockCheckbox\" (change)= \"checkboxValue()\">\n\n<input type=\"checkbox\" [(ngModel)]=\"ConvertibleCheckbox\" (change)= \"checkboxValue()\"> -->\n\n\n<!-- <input type=\"text\"  -->\n\n<br>\n<hr/>\n\n<div *ngIf=\"form1\" name = \"EquityForm\" >\n\n<H3> EQUITY TRANSACTION</H3>\n<div class=\"dropdowns\">\n<ng-multiselect-dropdown class=\"custom-asset-dropdown\"\n  [placeholder]=\"'Please select your account'\"\n  [settings]=\"dropdownSettings\"\n  [data]=\"accountDropdownList\"\n  [(ngModel)]=\"accountSelectedItems\"\n  (onDeSelect)=\"OnItemDeSelect($event)\"\n  (onDeSelectAll)=\"onDeSelectAll($event)\"\n  (onSelect)=\"onItemSelect($event)\"\n  (onSelectAll)=\"onSelectAll($event)\"\n  [ngModelOptions]=\"{standalone: true}\"\n>\n</ng-multiselect-dropdown>\n\n<br>\n\n<ng-multiselect-dropdown class=\"custom-asset-dropdown\"\n  [placeholder]=\"'Please select your portfolio accounts'\"\n  [settings]=\"accountPortfolioDropdownSettings\"\n  [data]=\"accountPortfolioDropdownList\"\n  [(ngModel)]=\"accountPortfolioSelectedItems\"\n  (onDeSelect)=\"OnAccountPortfolioDeSelect($event)\"\n  (onDeSelectAll)=\"onAccountPortfolioDeSelectAll($event)\"\n  (onSelect)=\"onAccountPortfolioItemSelect($event)\"\n  (onSelectAll)=\"onAccountPortfolioSelectAll($event)\"\n  [ngModelOptions]=\"{standalone: true}\"\n>\n</ng-multiselect-dropdown>\n\n\n\n<br>\n\n   <ng-multiselect-dropdown class=\"custom-asset-dropdown\"\n  [placeholder]=\"'Select asset'\"\n  [settings]=\"securityDropdownSettings\"\n  [data]=\"securityDropdownList\"\n  [(ngModel)]=\"securitySelectedItems\"\n  (onDeSelect)=\"OnSecurityDeSelect($event)\"\n  (onDeSelectAll)=\"onSecurityDeSelectAll($event)\"\n  (onSelect)=\"onSecuritySelect($event)\"\n  (onSelectAll)=\"onSecuritySelectAll($event)\"\n  [ngModelOptions]=\"{standalone: true}\"\n>\n</ng-multiselect-dropdown>\n</div>\n<br>\n<div *ngIf=\"!DefaultOrder\">\n<label for=\"quantityOrder\">quantityOrder:</label>\n  <input type=\"number\" id=\"quantityOrder\" name=\"quantityOrder\" [(ngModel)] = \"quantityOrder\"  min=\"1\" [ngModelOptions]=\"{standalone:\n   true}\"  placeholder=\"Enter quantity\">\n</div>\n<br>\n\n<div *ngIf=\"DefaultOrder\">\nYou have selected default order of quantity {{this.quantityOrder}}\n\n</div>\n<br>\n <input type=\"submit\" value=\"Submit\"> \n\n \n<!-- <div *ngIf = 'details'>{{orderDetails}}</div> -->\n\n\n\n\n\n</div>\n<div *ngIf=\"form2\" name = \"FixedIncomeForm\" >\n<H3> FIXEDINCOME TRANSACTION</H3>\n\n\n<ng-multiselect-dropdown class=\"custom-asset-dropdown\"\n  [placeholder]=\"'Please select your account'\"\n  [settings]=\"dropdownSettings\"\n  [data]=\"accountDropdownList\"\n  [(ngModel)]=\"accountSelectedItems\"\n  (onDeSelect)=\"OnItemDeSelect($event)\"\n  (onDeSelectAll)=\"onDeSelectAll($event)\"\n  (onSelect)=\"onItemSelect($event)\"\n  (onSelectAll)=\"onSelectAll($event)\"\n  [ngModelOptions]=\"{standalone: true}\"\n>\n</ng-multiselect-dropdown>\n\n\n<br>\n\n\n<br>\n<ng-multiselect-dropdown class=\"custom-asset-dropdown\"\n  [placeholder]=\"'Please select your portfolio accounts'\"\n  [settings]=\"accountPortfolioDropdownSettings\"\n  [data]=\"accountPortfolioDropdownList\"\n  [(ngModel)]=\"accountPortfolioSelectedItems\"\n  (onDeSelect)=\"OnAccountPortfolioDeSelect($event)\"\n  (onDeSelectAll)=\"onAccountPortfolioDeSelectAll($event)\"\n  (onSelect)=\"onAccountPortfolioItemSelect($event)\"\n  (onSelectAll)=\"onAccountPortfolioSelectAll($event)\"\n  [ngModelOptions]=\"{standalone: true}\"\n>\n</ng-multiselect-dropdown>\n\n\n\n\n<br>\n\n   <ng-multiselect-dropdown class=\"custom-asset-dropdown\"\n  [placeholder]=\"'Select asset'\"\n  [settings]=\"securityDropdownSettings\"\n  [data]=\"securityDropdownList\"\n  [(ngModel)]=\"securitySelectedItems\"\n  (onDeSelect)=\"OnSecurityDeSelect($event)\"\n  (onDeSelectAll)=\"onSecurityDeSelectAll($event)\"\n  (onSelect)=\"onSecuritySelect($event)\"\n  (onSelectAll)=\"onSecuritySelectAll($event)\"\n  [ngModelOptions]=\"{standalone: true}\"\n>\n</ng-multiselect-dropdown>\n\n<br>\n<div *ngIf=\"!DefaultOrder\">\n<label for=\"quantityOrder\">quantityOrder:</label>\n  <input type=\"number\" id=\"quantityOrder\" name=\"quantityOrder\" [(ngModel)] = \"quantityOrder\"  min=\"1\" [ngModelOptions]=\"{standalone:\n   true}\"  placeholder=\"Enter quantity\">\n</div>\n<br>\n\n<div *ngIf=\"DefaultOrder\">\nYou have selected default order of quantity {{this.quantityOrder}}\n\n</div>\n<br>\n <input type=\"submit\" value=\"Submit\"> \n\n\n</div>\n\n<div *ngIf=\"form3\" name = \"Derivative\" >\n<H3> DERIVATIVE TRANSACTION</H3>\n\n\n<ng-multiselect-dropdown class=\"custom-asset-dropdown\"\n  [placeholder]=\"'Please select your account'\"\n  [settings]=\"dropdownSettings\"\n  [data]=\"accountDropdownList\"\n  [(ngModel)]=\"accountSelectedItems\"\n  (onDeSelect)=\"OnItemDeSelect($event)\"\n  (onDeSelectAll)=\"onDeSelectAll($event)\"\n  (onSelect)=\"onItemSelect($event)\"\n  (onSelectAll)=\"onSelectAll($event)\"\n  [ngModelOptions]=\"{standalone: true}\"\n>\n</ng-multiselect-dropdown>\n\n<br>\n<ng-multiselect-dropdown class=\"custom-asset-dropdown\"\n  [placeholder]=\"'Please select your portfolio accounts'\"\n  [settings]=\"accountPortfolioDropdownSettings\"\n  [data]=\"accountPortfolioDropdownList\"\n  [(ngModel)]=\"accountPortfolioSelectedItems\"\n  (onDeSelect)=\"OnAccountPortfolioDeSelect($event)\"\n  (onDeSelectAll)=\"onAccountPortfolioDeSelectAll($event)\"\n  (onSelect)=\"onAccountPortfolioItemSelect($event)\"\n  (onSelectAll)=\"onAccountPortfolioSelectAll($event)\"\n  [ngModelOptions]=\"{standalone: true}\"\n>\n</ng-multiselect-dropdown>\n\n\n\n\n\n\n<br>\n\n   <ng-multiselect-dropdown class=\"custom-asset-dropdown\"\n  [placeholder]=\"'Select asset'\"\n  [settings]=\"securityDropdownSettings\"\n  [data]=\"securityDropdownList\"\n  [(ngModel)]=\"securitySelectedItems\"\n  (onDeSelect)=\"OnSecurityDeSelect($event)\"\n  (onDeSelectAll)=\"onSecurityDeSelectAll($event)\"\n  (onSelect)=\"onSecuritySelect($event)\"\n  (onSelectAll)=\"onSecuritySelectAll($event)\"\n  [ngModelOptions]=\"{standalone: true}\"\n>\n</ng-multiselect-dropdown>\n\n<br>\n<div *ngIf=\"!DefaultOrder\">\n<label for=\"quantityOrder\">quantityOrder:</label>\n  <input type=\"number\" id=\"quantityOrder\" name=\"quantityOrder\" [(ngModel)] = \"quantityOrder\"  min=\"1\" [ngModelOptions]=\"{standalone:\n   true}\"  placeholder=\"Enter quantity\">\n</div>\n<br>\n\n<div *ngIf=\"DefaultOrder\">\nYou have selected default order of quantity {{this.quantityOrder}}\n\n</div>\n<br>\n <input type=\"submit\" value=\"Submit\"> \n\n\n\n</div>\n\n</div>\n\n\n\n<div *ngIf=\"transactionType == 'Sell'\">\n\n  Sell will be at last, according to the investments done\n\n</div>\n\n</div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormArray,\n  FormControl,\n  ValidatorFn,\n  ReactiveFormsModule\n} from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-login',\n  \n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n\n\nexport class LoginComponent implements OnInit {\n\n\n  username = \"\"\n  password = \"\"\n  errormessage = \"Invalid credentials!! Please enter correct credentials\"\n  invalidLogin = false\n\n\n  constructor(private router: Router) {\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n  \n  handleLogin(){\n\n    console.log(this.username)\n\n    if(this.username == \"gaurav\" && this.password== \"1234\"){\n\n      //----------------username as param--------------------------\n      //------routing enabled using routing.module\n        this.router.navigate(['excel']);\n        this.invalidLogin = false\n\n\n\n\n\n    }\n\n    else{\n\n      this.invalidLogin = true\n    }\n  }\n\n\n\n\n\n \n\n  \n\n}\n","\n<div class=\"login-box\">\n\n\n\n  <h3> Login</h3>\n  <div class=\"textbox\">\n    <i class=\"fas fa-user\"></i>\n    <input type=\"text\" placeholder=\"Username\" [(ngModel)]=\"username\" >\n  </div>\n\n  <div class=\"textbox\">\n    <i class=\"fas fa-lock\"></i>\n    <input type=\"password\" placeholder=\"Password\" [(ngModel)]=\"password\">\n  </div>\n\n  <input type=\"button\" class=\"btn\" value=\"Sign in\" (click)=   handleLogin()>\n\n  <div *ngIf = 'invalidLogin' >{{errormessage}}</div>  \n</div>\n<br>\n<!-- <div *ngIf = 'invalidLogin'>{{errormessage}}</div> -->\n  \n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute} from '@angular/router';\n\nimport { Observable, of } from \"rxjs\";\n\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  \n\n  \n  name = ''\n  security = 'equity'\n  transactionType = ''\n  commonstock = ''\n  convertible = ''\n  longBond = ''\n  currencyForward = ''\n  json1\n  json2 \n  json3\n\n  jsonArr = []\n\n  selldata\n\n  accountHolder = [];\n\n  derivative = new Derivative(101,new Date(),new Date(),104,'T2_1170CIC',5,'infy','USD INR','gaurav','TST','infy','LB_20190625_01')\n\n  fixedIncome = new FixedIncome ([101,102],'long bond','852297CK4',new Date(),new Date(),104,'T2_1170CIC',5,'infy','gaurav','TST','LB_20190625_01')\n\n\n\n  \n\n\n  form1 = false\n  form2 = false\n  form3 = false\n  \n\n\n  \n  //activated route- route currently active\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n    //param is the map and name is the key \n    console.log(this.route.snapshot.params['name']);\n    \n    this.name = this.route.snapshot.params['name']\n  \n\n}\n\nprivate setting = {\n    element: {\n      dynamicDownload: null as HTMLElement\n    }\n\n}\n\ncalculate(value){\n\n  console.log(\" calculate total\");\n  \n\n  if(value=='Derivative'){\n\n   \n\n    return this.derivative.price * this.derivative.quantityOrder * this.accountHolder.length\n  }\n  \n\n  if(value == 'FixedIncomeForm'){\n    \n\n    return this.fixedIncome.price * this.fixedIncome.quantityOrder *this.accountHolder.length\n    }\n\n    \n\n}\n\n\n            \nfakeValidateUserData() {\n    return of({\n      security: this.security,\n      userData2: 2\n    });\n  }\n\n  \nonSubmit(){\n\n  console.log('hiii')\n\n  console.log('fixedIncome.account',this.fixedIncome.account);\n  \n\n  if(this.form1){\n\n    \n\n  }\n  if(this.form2){\n\n    console.log(\"this.accountHolder.length in form2-->\",this.accountHolder.length);\n\n     if(this.accountHolder.length>0)\n     {\n    for (var i = 0; i < this.accountHolder.length; i++) {\n        console.log('this.accountHolder-->',this.accountHolder[i]);\n        // this.accountHolder = this.accountHolder.concat(value)\n        this.json2 = {\n    \"account\" : this.accountHolder[i],\n    \"securities\" : this.fixedIncome.securities,\n    \"assetId\" : this.fixedIncome.assetId,\n    \"openDate\" : this.fixedIncome.openDate,\n    \"settleDate\" : this.fixedIncome.settleDate,\n    \"price\" : this.fixedIncome.price,\n    \"portfolioOrder\" : this.fixedIncome.portfolioOrder,\n    \"quantityOrder\" : this.fixedIncome.quantityOrder,\n    \"portfolioManager\" : this.fixedIncome.portfolioManager,\n    \"trader\" : this.fixedIncome.trader,\n    \"counterParty\" : this.fixedIncome.counterParty,\n    \"confirmedWith\" : this.fixedIncome.confirmedWith\n    }\n\n        this.jsonArr = this.jsonArr.concat(this.json2)\n      }\n    \n    console.log('this.jsonArr--->',this.jsonArr);\n  \n    this.fakeValidateUserData().subscribe((res) => {\n      this.dyanmicDownloadByHtmlTag({\n        fileName: 'My Report',\n        text: JSON.stringify(this.jsonArr)\n      });\n    });\n\n      window.location.reload();\n    }\n  else{\n\n    alert(\"No Account Selected\"); \n\n  }\n\n  }\n\n  if(this.form3){\n\n    this.json3 = {\n    \n    \"openDate\" : this.derivative.openDate,\n    \"settleDate\" : this.derivative.settleDate,\n    \"price\" : this.derivative.price,\n    \"portfolioOrder\" : this.derivative.portfolioOrder,\n    \"quantityOrder\" : this.derivative.quantityOrder,\n    \"portfolioManager\" : this.derivative.portfolioManager,\n    \"currencyPair\" : this.derivative.currencyPair,\n    \"trader\" : this.derivative.trader,\n    \"counterParty\" : this.derivative.counterParty,\n    \"confirmedBy\" : this.derivative.confirmedBy,\n    \"confirmedWith\" : this.derivative.confirmedWith\n\n    }\n\n\n    this.fakeValidateUserData().subscribe((res) => {\n      this.dyanmicDownloadByHtmlTag({\n        fileName: 'My Report',\n        text: JSON.stringify(this.json3)\n      });\n    });\n  }\n\n   \n\n\n  \n\n\n}\n\nprivate dyanmicDownloadByHtmlTag(arg: {\n    fileName: string,\n    text: string\n  }) {\n    if (!this.setting.element.dynamicDownload) {\n      this.setting.element.dynamicDownload = document.createElement('a');\n    }\n    const element = this.setting.element.dynamicDownload;\n    const fileType = arg.fileName.indexOf('.json') > -1 ? 'text/json' : 'text/plain';\n    element.setAttribute('href', `data:${fileType};charset=utf-8,${encodeURIComponent(arg.text)}`);\n    element.setAttribute('download', arg.fileName);\n\n    var event = new MouseEvent(\"click\");\n    element.dispatchEvent(event);\n  }\n\n  checkTransactionType(){\n\n    console.log('checkTransactionType--->',this.transactionType);\n    \n\n  }\n\n  accountCheckbox(value){\n\n    console.log('***********start of checkbox***********');\n    \n    \n    console.log('accountCheckbox-->',value);\n\n    var arr = [];\n\n    \n    \n\n    if(this.accountHolder.includes(value)){\n      \n    console.log('if condition');\n\n      for (let index = 0; index < this.accountHolder.length; index++) {\n\n          if(this.accountHolder[index]==value){\n            continue\n          }\n          else{\n            arr = arr.concat(this.accountHolder[index])\n\n          }\n\n\n      }\n\n      this.accountHolder = arr;\n\n    }else{\n\n      this.accountHolder = this.accountHolder.concat(value)\n    }\n    \n    \n    \n\n    console.log('accountHolder--->',this.accountHolder);\n    console.log('*************end of accountCheckbox*********');\n    \n    \n\n  }\n\n\n  changeRadio(value){\n\n    console.log(value,'-->selected');\n    \n    this.form1 = false\n    this.form2 = false\n    this.form3 = false\n  }\n\nchangeStatus(e,value) {\n   \n    var status = e.target.checked;\n\n    console.log('changeStatus')\n\n    console.log('transactionType--->',this.transactionType)\n    console.log('account no--->',this.fixedIncome.account[0]);\n    \n    if(status && this.transactionType=='Buy'){\n      \n\n      if(value=='commonstock' || value=='convertible')\n      {\n\n        console.log('form1 true')\n\n        this.form1 = true\n        this.form2 = false\n        this.form3 = false\n\n\n      }\n      else if(value=='longBond')\n      {\n\n        console.log('form2 true')\n\n        this.form2 = true\n        this.form1 = false\n        \n        this.form3 = false\n      }\n      else if(value=='currencyForward')\n      {\n        console.log('form3 true')\n        this.form3 = true\n        this.form2 = false\n        this.form1 = false\n      }\n      \n    }\n    else{\n          this.form1 = false\n           this.form2 = false\n           this.form3 = false\n        \n      }\n    console.log(value)\n    console.log(status);\n}\n\n}\n\nexport class FixedIncome{\n  constructor(\n\n    public account: number[],\n    public securities: string,\n    public assetId : string,\n    public openDate : Date,\n    public settleDate : Date,\n    public price : number,\n    public portfolioOrder : string,\n    public quantityOrder : number,\n    public portfolioManager : string,\n    public trader : string,\n    public counterParty : string,\n    public confirmedWith : string,\n   \n\n\n  ){}\n}\n  export class Derivative{\n  constructor(  \n\n    \n    public account: number,\n    public openDate : Date,\n    public settleDate : Date,\n    public price : number,\n    public portfolioOrder : string,\n    public quantityOrder : number,\n    public portfolioManager : string,\n    public currencyPair : string,\n    public trader : string,\n    public counterParty : string,\n    public confirmedBy : string,\n    public confirmedWith : string,\n    \n\n\n  ){}\n\n\n}","<form (ngSubmit)= \"onSubmit()\" >\n\n\n<h1><p> Capital Tool</p></h1>\n\n<hr>\n\n<div>\n\nSelection type of transaction\n\n<div class=\"radio\">\n                <label><input type=\"radio\" [(ngModel)]=\"transactionType\" name=\"transactionType\" value=\"Buy\" (change)=\"checkTransactionType()\" >Buy</label>\n            </div>\n\n\n            \n            <div class=\"radio\"> \n                <label><input type=\"radio\" [(ngModel)]=\"transactionType\" name=\"transactionType\" value=\"Sell\" (change)=\"checkTransactionType()\" >Sell</label>\n            </div>\n</div>\n\n\n<div *ngIf=\"transactionType == 'Buy'\">\n\nSelect type of security\n            <div class=\"radio\">\n                <label><input type=\"radio\" [(ngModel)]=\"security\" name=\"security\" value=\"Equity\" (click)=\"changeRadio('form1')\"  >Equity</label>\n            </div>\n            <div class=\"radio\">\n                <label><input type=\"radio\" [(ngModel)]=\"security\" name=\"security\" value=\"Fixed Income\" (click)=\"changeRadio('form2')\" >Fixed Income</label>\n            </div>\n            <div class=\"radio\">\n                <label><input type=\"radio\" [(ngModel)]=\"security\" name=\"security\" value=\"Derivative\" (click)=\"changeRadio('form3')\">Derivative</label>\n            </div>\n\n\n\n<div *ngIf=\"security == 'Equity'\">\nYou have selected Equity :\n<br> \n\n<input type=\"checkbox\" id=\"Common Stock\" name=\"Common Stock\" value=\"Common Stock\" [(ngModel)]=\"commonstock\" (change)=\"changeStatus($event,'commonstock')\" >\n<label for=\"Common Stock\"> Common Stock</label>\n<input type=\"checkbox\" id=\"Convertible\" name=\"Convertible\" value=\"Convertible\" [(ngModel)]=\"convertible\" (change)=\"changeStatus($event,'convertible')\">\n<label for=\"Convertible\"> Convertible</label>\n\n\n\n</div>\n<div *ngIf=\"security == 'Fixed Income'\">\nYou have selected Fixed Income : \n<br>\nLong Bond :\n<input type=\"checkbox\" id=\"LongBond\" name=\"Long Bond\" value = \"Long Bond\"  (change)=\"changeStatus($event,'longBond')\">\n\n\n\n\n</div>\n\n\n\n<div *ngIf=\"security === 'Derivative'\">\nYou have selected Derivative : \n\n<br>\n\n<input type=\"checkbox\" id=\"Currency Forward\" name=\"Currency Forward\" value=\"Currency Forward\" (change)=\"changeStatus($event,'currencyForward')\">\n<label for=\"Currency Forward\">Currency Forward</label><br>\n\n\n\n</div>\n\n<hr>\n<div *ngIf=\"form1\" name = \"equity\" >\n\nTo be Implemented\n\n</div>\n\n<div *ngIf=\"form2\" name = \"FixedIncomeForm\" >\n  <label for=\"account\">account:</label><br>\n\n\n  <div *ngFor=\"let account of fixedIncome.account; let i = index\">\n  \n  \n    <input type=\"checkbox\" value=\"account\" (change)=\"accountCheckbox(account)\"> {{account}}\n    \n  </div>\n  <!-- <input type=\"text\" id=\"account\" name=\"account\" [(ngModel)] = \"fixedIncome.account[0]\" required>\n   -->\n           <br>\n \n\n  <label for=\"securities\">securities:</label><br>\n  <input type=\"text\" id=\"securities\" name=\"securities\" [(ngModel)] = \"fixedIncome.securities\" readonly>\n  \n  <br>\n  \n  <label for=\"openDate\">Trade date:</label><br>\n  <input type=\"date\" id=\"openDate\" name=\"openDate\" [(ngModel)] = \"fixedIncome.openDate \" required >\n\n\n  <br>\n\n  <label for=\"settleDate\">settleDate:</label><br>\n  <input type=\"date\" id=\"settleDate\" name=\"settleDate\" [(ngModel)] = \"fixedIncome.settleDate\" required>\n  \n  <br>\n\n  <label for=\"assetId\">assetId:</label><br>\n  <input type=\"text\" id=\"assetId\" name=\"assetId\" [(ngModel)] = \"fixedIncome.assetId \" readonly>\n  \n  <br>\n  \n  <label for=\"price\">price:</label><br>\n  <input type=\"number\" id=\"price\" name=\"price\"  [(ngModel)] = \"fixedIncome.price\" readonly>\n\n  <br>\n\n  <label for=\"portfolioOrder\">portfolioOrder:</label><br>\n  <input type=\"text\" id=\"portfolioOrder\" name=\"portfolioOrder\" [(ngModel)] = \"fixedIncome.portfolioOrder\" required>\n  \n  <br>\n  \n  <label for=\"quantityOrder\">quantityOrder:</label><br>\n  <input type=\"number\" id=\"quantityOrder\" name=\"quantityOrder\" [(ngModel)] = \"fixedIncome.quantityOrder\" min=\"1\" required>\n \n  <br>\n\n  <label for=\"portfolioManager\">portfolioManager:</label><br>\n  <input type=\"text\" id=\"portfolioManager\" name=\"portfolioManager\" [(ngModel)] = \"fixedIncome.portfolioManager\" >\n  \n  \n  <br>\n  \n  <label for=\"trader\">trader:</label><br>\n  <input type=\"text\" id=\"trader\" name=\"trader\" [(ngModel)] = \" fixedIncome.trader\" readonly>\n\n    <br>\n  \n  <label for=\"counterParty\">counterParty:</label><br>\n  <input type=\"text\" id=\"counterParty\" name=\"counterParty\" [(ngModel)] = \" fixedIncome.counterParty\n  \" required>\n\n    <br>\n  \n  <label for=\"trader\">confirmedWith:</label><br>\n  <input type=\"text\" id=\"confirmedWith\" name=\"confirmedWith\" [(ngModel)] = \" fixedIncome.confirmedWith\" required>\n\n\n  <br>\n  <p class= \"btn btn-success\"> Total: {{calculate(\"FixedIncomeForm\")}}</p>\n\n  <br>\n  \n  <input type=\"submit\" value=\"Submit\"> \n  <!-- <input type=\"reset\" value=\"Reset\">  -->\n\n</div>\n\n<div *ngIf=\"form3\" name = \"Derivative\">\n\n\nTo be implemented\n  <!-- <label for=\"account derivate\">account derivate:</label><br>\n  <input type=\"text\" id=\"account\" name=\"account\" [(ngModel)] = \" derivative.account\" >\n  \n  <br>\n  \n  <label for=\"openDate\">Trade Date:</label><br>\n  <input type=\"date\" id=\"openDate\" name=\"openDate\" [(ngModel)] = \" derivative.openDate\">\n\n  <br>\n\n  <label for=\"settleDate\">settleDate:</label><br>\n  <input type=\"date\" id=\"settleDate\" name=\"settleDate\" [(ngModel)] = \" derivative.settleDate  \">\n  \n  <br>\n  \n  <label for=\"price\">price:</label><br>\n  <input type=\"text\" id=\"price\" name=\"price\" [(ngModel)] = \" derivative.price\" readonly>\n\n  <br>\n\n  <label for=\"portfolioOrder\">portfolioOrder:</label><br>\n  <input type=\"text\" id=\"portfolioOrder\" name=\"portfolioOrder\" [(ngModel)] = \" derivative.portfolioOrder\">\n  \n  <br>\n  \n  <label for=\"quantityOrder\">quantityOrder:</label><br>\n  <input type=\"text\" id=\"quantityOrder\" name=\"quantityOrder\" [(ngModel)] = \" derivative.quantityOrder  \">\n \n  <br>\n\n  <label for=\"portfolioManager\">portfolioManager:</label><br>\n  <input type=\"text\" id=\"portfolioManager\" name=\"portfolioManager\" [(ngModel)] = \" derivative.portfolioManager\" >\n  \n\n  <br>\n\n  <label for=\"currencyPair\">currencyPair:</label><br>\n  <input type=\"text\" id=\"currencyPair\" name=\"currencyPair\" [(ngModel)] = \" derivative.currencyPair\">\n  \n  <br>\n  \n  <label for=\"trader\">trader:</label><br>\n  <input type=\"text\" id=\"trader\" name=\"trader\" [(ngModel)] = \"derivative.trader\" >\n\n    <br>\n  \n  <label for=\"counterParty\">counterParty:</label><br>\n  <input type=\"text\" id=\"counterParty\" name=\"counterParty\" [(ngModel)] = \"derivative.counterParty\">\n\n    <br>\n  \n  <label for=\"confirmedBy\">confirmedBy:</label><br>\n  <input type=\"text\" id=\"confirmedBy\" name=\"confirmedBy\" [(ngModel)] = \"derivative.confirmedBy\"> \n\n  \n  <br>\n  <label for=\"confirmedWith\">confirmedWith:</label><br>\n  <input type=\"text\" id=\"confirmedWith\" name=\"confirmedWith\" [(ngModel)] = \"derivative.confirmedWith\">\n\n  <br>\n\n  <p class=\"btn btn-success\">Total: {{calculate(\"Derivative\")}}</p>\n  <br>\n\n  <input type=\"submit\" value=\"Submit\"> \n  <input type=\"reset\" value=\"Reset\"> -->\n  \n\n</div>\n\n</div>\n\n\n<div *ngIf=\"transactionType == 'Sell'\">\n\n  Sell will come from the database, according to the investments done\n\n</div>\n\n\n</form>\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}